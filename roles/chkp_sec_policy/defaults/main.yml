---
# Default vars for chkp_sec_policy role 
# List of gateway objects and their parameters to add
cp_mgmt_simple_gateway_vars:
- { state: absent, name: vsphere_sg01, comments: Test environment in VM Ware vSphere, anti_bot: true, anti_virus: true, appi_ctrl: true, color: sea green, firewall: true, ips: true, sickey: vpn123, threat_emulation: false, url_filtering: true, gw_version: R81, eth0_color: red, eth0_comments: Leads to Internet ,eth0_ipv4: 192.168.233.101, eth0_ipv4_network_mask: 255.255.255.0 ,eth0_anti_spoofing: true, eth0_topology: External, eth0_security_zone: true, eth0_specific_zone: ExternalZone, eth1_color: sea green, eth1_comments: Leads to Web Frontend, eth1_ipv4: 10.101.1.1, eth1_ipv4_network_mask: 255.255.255.0, eth1_anti_spoofing: true, eth1_topology: Internal, eth1_topology_ip_behind_if: network defined by the interface ip and net mask, eth1_security_zone: true, eth1_specific_zone: InternalZone, eth2_color: blue, eth2_comments: Leads to Application Backend, eth2_ipv4: 10.101.2.1, eth2_ipv4_network_mask: 255.255.255.0, eth2_anti_spoofing: true, eth2_topology: Internal, eth2_topology_ip_behind_if: network defined by the interface ip and net mask, eth2_security_zone: true, eth2_specific_zone: DMZZone }
- { state: present, name: azure_sg02, comments: Staging environment in Azure, anti_bot: true, anti_virus: true, appi_ctrl: true, color: orange, firewall: true, ips: true, sickey: vpn123, threat_emulation: false, url_filtering: true, gw_version: R81, eth0_color: red, eth0_comments: Leads to Internet ,eth0_ipv4: 192.168.233.102, eth0_ipv4_network_mask: 255.255.255.0 ,eth0_anti_spoofing: true, eth0_topology: External, eth0_security_zone: true, eth0_specific_zone: ExternalZone, eth1_color: sea green, eth1_comments: Leads to Web Frontend, eth1_ipv4: 10.101.1.2, eth1_ipv4_network_mask: 255.255.255.0, eth1_anti_spoofing: true, eth1_topology: Internal, eth1_topology_ip_behind_if: network defined by the interface ip and net mask, eth1_security_zone: true, eth1_specific_zone: InternalZone, eth2_color: blue, eth2_comments: Leads to Application Backend, eth2_ipv4: 10.101.2.2, eth2_ipv4_network_mask: 255.255.255.0, eth2_anti_spoofing: true, eth2_topology: Internal, eth2_topology_ip_behind_if: network defined by the interface ip and net mask, eth2_security_zone: true, eth2_specific_zone: DMZZone }
- { state: present, name: aws_sg03, comments: Production environment in AWS, anti_bot: true, anti_virus: true, appi_ctrl: true, color: red, firewall: true, ips: true, sickey: vpn123, threat_emulation: false, url_filtering: true, gw_version: R81, eth0_color: red, eth0_comments: Leads to Internet ,eth0_ipv4: 192.168.233.103, eth0_ipv4_network_mask: 255.255.255.0 ,eth0_anti_spoofing: true, eth0_topology: External, eth0_security_zone: true, eth0_specific_zone: ExternalZone, eth1_color: sea green, eth1_comments: Leads to Web Frontend, eth1_ipv4: 10.101.1.3, eth1_ipv4_network_mask: 255.255.255.0, eth1_anti_spoofing: true, eth1_topology: Internal, eth1_topology_ip_behind_if: network defined by the interface ip and net mask, eth1_security_zone: true, eth1_specific_zone: InternalZone, eth2_color: blue, eth2_comments: Leads to Application Backend, eth2_ipv4: 10.101.2.3, eth2_ipv4_network_mask: 255.255.255.0, eth2_anti_spoofing: true, eth2_topology: Internal, eth2_topology_ip_behind_if: network defined by the interface ip and net mask, eth2_security_zone: true, eth2_specific_zone: DMZZone }

# List of gateways to install the policy to
#policy_targets: ["vsphere_sg01","azure_sg02"]
policy_targets: ["aws_sg03"]

#Policy packages to add
policy_name: Orchestration_Demo_Policy
cp_mgmt_package_vars:
- { state: present, 
    name: Orchestration_Demo_Policy, 
    comments: Created by ansible during Orchestration demo, 
    color: forest green, 
    threat_prevention: true, 
    access: true 
  }

# List of networks to add
cp_mgmt_network_vars:
- { state: present, name: 'AppServers', subnet: 10.2.1.0/24, groups: ["ACME_nets"], color: orange}
- { state: present, name: 'DBServers', subnet: 10.2.11.0/24, groups: ["ACME_nets"], color: cyan}

# List of hosts to add
cp_mgmt_host_vars:
- { state: present, name: hst-dmz-webserver, ip: 10.2.0.10, color: pink, 
nat_auto_rule: true, nat_method: static, nat_ipv4: 172.27.254.210, nat_install_on: All
  }

#List of rules to create on in the policy package
cp_mgmt_access_rule_vars:
- { state: present, layer: Orchestration_Demo_Policy Network,  name: Access to Web Application,
    position: 1,  source: any, destination: ["hst-dmz-webserver"], service: ["http", "https"], action: Accept, track_type: log 
  }
- { state: present, layer: Orchestration_Demo_Policy Network, name: ACMECorp WebServer to APP, 
    position: 2, source: ["hst-dmz-webserver"], destination: AppServers, service: ["MySQL"], action: Accept, track_type: log 
  }
- { state: present, layer: Orchestration_Demo_Policy Network, name: ACMECorp AppServer to DB, 
    position: 3, source: AppServers, destination: DBServers, service: ["MySQL"], action: Accept, track_type: log 
  }
- { state: present, layer: Orchestration_Demo_Policy Network, name: ACMECorp WebServer Outbound Access, 
    position: 4, source: ["hst-dmz-webserver"], destination: any, service: ["http", "https", "ntp", "dns"], action: Accept, track_type: log 
  }
  # Enable log on the existing cleanup rule
- { state: present, layer: Orchestration_Demo_Policy Network, name: Cleanup rule, 
    position: 5, source: any, destination: ["any"], service: ["any"], action: Drop, track_type: log }